@model CourseCatalogViewModel
@{
    ViewData["Title"] = "Training Courses";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="display-4">Training Courses</h1>
            <p class="text-muted">Enhance your skills with our comprehensive training programs.</p>
        </div>
        <a href="#" class="btn btn-primary">
            <i class="fas fa-award me-2"></i>My Learning
        </a>
    </div>

    <!-- Search and Filters -->
    <form method="get" class="mb-4">
        <div class="row">
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" name="search" class="form-control" placeholder="Search courses..." value="@Model.SearchTerm">
                </div>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-outline-secondary w-100">
                    <i class="fas fa-filter me-1"></i>Search
                </button>
            </div>
        </div>
    </form>

    <!-- Category Tabs -->
    <ul class="nav nav-tabs mb-4" id="categoryTabs">
        @foreach (var category in Model.Categories)
        {
            <li class="nav-item">
                <a class="nav-link @(Model.SelectedCategory == category ? "active" : "")" 
                   href="@Url.Action("Index", new { search = Model.SearchTerm, category = category })">
                    @(category == "all" ? "All" : category)
                </a>
            </li>
        }
    </ul>

    <!-- Course Grid -->
    @if (Model.Courses.Any())
    {
        <div class="row">
            @foreach (var course in Model.Courses)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100 shadow-sm course-card">
                        <div class="position-relative">
                            <img src="@course.Thumbnail" class="card-img-top" alt="@course.Title" style="height: 200px; object-fit: cover;">
                            <div class="position-absolute top-0 start-0 m-2">
                                <span class="badge bg-secondary">@course.Level</span>
                            </div>
                            <div class="position-absolute top-0 end-0 m-2">
                                <span class="badge @GetStatusBadgeClass(course.Status)">@GetStatusText(course.Status)</span>
                            </div>
                        </div>
                        
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@course.Title</h5>
                            <p class="card-text text-muted flex-grow-1">@course.Description</p>
                            
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <small class="text-muted">by @course.Instructor</small>
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-star text-warning me-1"></i>
                                    <span>@course.Rating</span>
                                </div>
                            </div>
                            
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="d-flex gap-3">
                                    <small class="text-muted">
                                        <i class="fas fa-clock me-1"></i>@course.Duration
                                    </small>
                                    <small class="text-muted">
                                        <i class="fas fa-users me-1"></i>@course.Enrolled
                                    </small>
                                </div>
                                <span class="badge bg-light text-dark">@course.Category</span>
                            </div>
                            
                            @if (course.Status == "enrolled" && course.Progress > 0)
                            {
                                <div class="mb-3">
                                    <div class="d-flex justify-content-between mb-1">
                                        <small>Progress</small>
                                        <small>@course.Progress%</small>
                                    </div>
                                    <div class="progress" style="height: 6px;">
                                        <div class="progress-bar" style="width: @course.Progress%"></div>
                                    </div>
                                </div>
                            }
                            
                            <a asp-action="Details" asp-route-id="@course.Id" class="btn @GetButtonClass(course.Status) w-100">
                                @if (course.Status == "completed")
                                {
                                    <i class="fas fa-check-circle me-2"></i>@:View Certificate
                                }
                                else if (course.Status == "enrolled")
                                {
                                    <i class="fas fa-play me-2"></i>@:Continue Learning
                                }
                                else
                                {
                                    <i class="fas fa-book-open me-2"></i>@:Enroll Now
                                }
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-book-open fa-3x text-muted mb-3"></i>
            <h3>No courses found</h3>
            <p class="text-muted">Try adjusting your search terms or browse different categories.</p>
        </div>
    }
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "completed" => "bg-success",
            "enrolled" => "bg-primary",
            _ => "bg-light text-dark"
        };
    }
    
    string GetStatusText(string status)
    {
        return status switch
        {
            "completed" => "Completed",
            "enrolled" => "Enrolled",
            _ => "Available"
        };
    }
    
    string GetButtonClass(string status)
    {
        return status == "available" ? "btn-primary" : "btn-outline-primary";
    }
}