@model UnganaConnect.UI.Models.Course
@using UnganaConnect.UI.Models
@{
    ViewData["Title"] = Model.Title;
    var courseProgress = ViewBag.CourseProgress as CourseProgress;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1><i class="fas fa-book me-2"></i>@Model.Title</h1>
        <p class="text-muted mb-0">@Model.Category</p>
    </div>
    <a asp-action="MyCourses" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left me-2"></i>Back to My Courses
    </a>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>@TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Course Progress Card -->
@if (courseProgress != null)
{
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h5 class="card-title mb-2">Course Progress</h5>
                    <div class="progress mb-2" style="height: 25px;">
                        <div class="progress-bar bg-success" role="progressbar" 
                             style="width: @courseProgress.ProgressPercentage%" 
                             aria-valuenow="@courseProgress.ProgressPercentage" 
                             aria-valuemin="0" aria-valuemax="100">
                            @Math.Round(courseProgress.ProgressPercentage, 1)%
                        </div>
                    </div>
                    <small class="text-muted">
                        @courseProgress.CompletedModules of @courseProgress.TotalModules modules completed
                    </small>
                </div>
                <div class="col-md-4 text-end">
                    @if (courseProgress.ProgressPercentage == 100)
                    {
                        <span class="badge bg-success fs-6">
                            <i class="fas fa-trophy me-1"></i>Course Completed!
                        </span>
                    }
                    else
                    {
                        <span class="badge bg-warning fs-6">
                            <i class="fas fa-clock me-1"></i>In Progress
                        </span>
                    }
                </div>
            </div>
        </div>
    </div>
}

<!-- Course Description -->
<div class="card shadow-sm mb-4">
    <div class="card-body">
        <h5 class="card-title">Course Description</h5>
        <p class="card-text">@Model.Description</p>
    </div>
</div>

<!-- Modules List -->
<div class="card shadow-sm">
    <div class="card-header bg-light">
        <h5 class="card-title mb-0">
            <i class="fas fa-list me-2"></i>Course Modules
        </h5>
    </div>
    <div class="card-body p-0">
        @if (Model.Modules != null && Model.Modules.Any())
        {
            <div class="list-group list-group-flush">
                @foreach (var module in Model.Modules.OrderBy(m => m.OrderIndex))
                {
                    <div class="list-group-item list-group-item-action module-item" 
                         data-module-id="@module.Id">
                        <div class="d-flex w-100 justify-content-between align-items-center">
                            <div class="flex-grow-1">
                                <h6 class="mb-1">
                                    <i class="fas fa-play-circle me-2 text-primary"></i>
                                    @module.Title
                                </h6>
                                <p class="mb-1 text-muted">@module.Content</p>
                                <div class="d-flex align-items-center">
                                    @if (!string.IsNullOrEmpty(module.VideoUrl))
                                    {
                                        <small class="text-muted me-3">
                                            <i class="fas fa-video me-1"></i>Video Available
                                        </small>
                                    }
                                    @if (!string.IsNullOrEmpty(module.FileUrl))
                                    {
                                        <small class="text-muted me-3">
                                            <i class="fas fa-file me-1"></i>Resources Available
                                        </small>
                                    }
                                    @if (module.Quizzes != null && module.Quizzes.Any())
                                    {
                                        <small class="text-muted">
                                            <i class="fas fa-question-circle me-1"></i>
                                            @module.Quizzes.Count Quiz(es)
                                        </small>
                                    }
                                </div>
                            </div>
                            <div class="text-end">
                                <a asp-action="Module" asp-route-moduleId="@module.Id" 
                                   class="btn btn-primary btn-sm">
                                    <i class="fas fa-play me-1"></i>Start Module
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-4">
                <i class="fas fa-folder-open fa-3x text-muted mb-3"></i>
                <p class="text-muted">No modules available for this course yet.</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add hover effects to module items
            const moduleItems = document.querySelectorAll('.module-item');
            moduleItems.forEach(item => {
                item.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = '#f8f9fa';
                    this.style.transform = 'translateX(5px)';
                    this.style.transition = 'all 0.3s ease';
                });
                
                item.addEventListener('mouseleave', function() {
                    this.style.backgroundColor = '';
                    this.style.transform = 'translateX(0)';
                });
            });
        });
    </script>
}
